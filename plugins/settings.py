
from database import database
from pystark import Stark, Message
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup


@Stark.cmd('settings', description='üëë‚Ä¢Definir configura√ß√µes do bot‚Ä¢üëë.', private_only=True)
async def settings(_, msg: Message):
    text, markup = await user_settings(msg.from_user.id)
    await msg.react(text, reply_markup=markup)


async def user_settings(user_id):
    data = await database.get('users', user_id)
    if not data:
        return False, False
    tick = ' ‚úî'
    cross = ' ‚úñÔ∏è '
    ask_emojis = "Personalizar emojis"
    ask_emojis_msg = f"Defina como Verdadeiro se quiser que o bot solicite emojis que ser√£o definidos para o adesivo de v√≠deo ao adicionar ao pacote. Se definido como Falso, todos os adesivos usar√£o emoji padr√£o, que √© - ‚ú®"
    get_webm = "Obter WEBM"
    get_webm_msg = f"Defina como Verdadeiro se quiser obter arquivos webm ao enviar qualquer adesivo de v√≠deo existente. Dessa forma, voc√™ pode adicionar adesivos de pacotes de outras pessoas usando @Stickers. Se for Falso, o bot ir√° ignorar o adesivo."
    kang_mode = "Modo Kang"
    kang_mode_msg = "Defina como Verdadeiro se quiser adicionar adesivos ao seu pacote apenas enviando um adesivo de v√≠deo de algum pacote existente. Dessa forma, voc√™ pode adicionar adesivos de pacotes de outras pessoas ao seu pacote. Se for Falso, o bot ir√° ."
    default_emojis = "Emojis padr√£o"
    default_emojis_msg = f"Defina emojis padr√£o para serem usados ‚Äã‚Äãem seus adesivos. Se nada estiver definido, ser√° usado com esse emoji ‚ú®."
    text = f'**Configura√ß√µes** \n\n'
    ask_emojis_db = data['ask_emojis']
    get_webm_db = data['get_webm']
    kang_mode_db = data['kang_mode']
    default_emojis_db = data['default_emojis']
    general_text = "**{}** : {} \n{} \n\n"
    if ask_emojis_db:
        text += general_text.format(ask_emojis, 'Verdadeiro ‚úì', ask_emojis_msg)
        ask_emojis += tick
    else:
        text += general_text.format(ask_emojis, 'Falso ‚úï', ask_emojis_msg)
        ask_emojis += cross
    if get_webm_db:
        text += general_text.format(get_webm, 'Verdadeiro ‚úì', get_webm_msg)
        get_webm += tick
    else:
        text += general_text.format(get_webm, 'Falso ‚úï', get_webm_msg)
        get_webm += cross
    if kang_mode_db:
        text += general_text.format(kang_mode, 'Verdadeiro ‚úì', kang_mode_msg)
        kang_mode += tick
    else:
        text += general_text.format(kang_mode, 'Falso ‚úï', kang_mode_msg)
        kang_mode += cross
    if default_emojis_db:
        text += general_text.format(default_emojis, default_emojis_db, default_emojis_msg)
        default_emojis += ' - DEFINIDO'
    else:
        text += general_text.format(default_emojis, 'N√£o configurado', default_emojis_msg)
        default_emojis += ' - N√ÉO CONFIGURADO'
    text += 'Use os bot√µes abaixo para alterar os valores. Um ‚úì significa Verdadeiro, j√° configurado! e um ‚úï significa Falso, n√£o configurado!'
    markup = InlineKeyboardMarkup([
        [InlineKeyboardButton(ask_emojis, callback_data="emojis")],
        [InlineKeyboardButton(default_emojis, callback_data="default_emojis")],
        [InlineKeyboardButton(kang_mode, callback_data="kang_mode")],
        [InlineKeyboardButton(get_webm, callback_data="webm")],
    ])
    return text, markup


async def default_emojis_settings(user_id):
    data = await database.get('users', user_id)
    if not data:
        return False, False
    data = data['default_emojis']
    if data:
        markup = InlineKeyboardMarkup([
            [InlineKeyboardButton('Alterar emojis', callback_data="change_default_emojis")],
            [InlineKeyboardButton('Remover emojis padr√£o', callback_data="remove_default_emojis")],
            [InlineKeyboardButton('<-- Voltar üëë', callback_data="back")],
        ])
        text = f'Os emojis padr√£o atuais s√£o `{data}` \n\nUse os bot√µes abaixo para alter√°-los ou remov√™-los'
    else:
        markup = InlineKeyboardMarkup([
            [InlineKeyboardButton('Adicionar emojis', callback_data="change_default_emojis")],
            [InlineKeyboardButton('<-- Voltar üëë', callback_data="back")],
        ])
        text = 'Atualmente nenhum Emoji est√° definido. Use o bot√£o abaixo para adicion√°-los.'
    return text, markup
